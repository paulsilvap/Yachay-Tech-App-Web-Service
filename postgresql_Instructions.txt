This instructions are written considering that you are using Ubuntu as your primary OS.

# Install the Components from the Ubuntu Repositories to use PostgreSQL

Our first step will be install all of the pieces that we need from the repositories. The following apt commands will get you the packages you need:

sudo apt-get update
sudo apt-get install python-pip python-dev libpq-dev postgresql postgresql-contrib

With the installation out of the way, we can move on to create the database and database user.

# Create a Database and Database User

By default, Postgres uses an authentication scheme called "peer authentication" for local connections. Basically, this means that if the user's operating system username matches a valid Postgres username, that user can login with no further authentication.

During the Postgres installation, an operating system user named postgres was created to correspond to the postgres PostgreSQL administrative user. We need to change to this user to perform administrative tasks:

sudo su - postgres

You should now be in a shell session for the postgres user. Log into a Postgres session by typing:

psql

First, create a database for the Django project. Each project should have its own isolated database for security reasons. Call the database demodb:

CREATE DATABASE demodb;

Remember to end all commands at an SQL prompt with a semicolon.

Next, create a database user which will be used to connect to and interact with the database:

CREATE USER demodb WITH PASSWORD 'demodb';

Now, give the database user access rights to the database we created:

GRANT ALL PRIVILEGES ON DATABASE demodb TO demodb;

Exit the postgres user's shell session with:

\q


Commands for Nixos

sudo -u postgres psql

-- # CREATE ROLE nixcloud WITH LOGIN PASSWORD 'nixcloud' CREATEDB;
     CREATE DATABASE nixcloud;
     GRANT ALL PRIVILEGES ON DATABASE nixcloud TO nixcloud;




